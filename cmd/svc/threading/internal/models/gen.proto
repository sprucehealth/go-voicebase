syntax = "proto3";

package models;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Reference {
	enum Type {
		REFERENCE_TYPE_ENTITY = 0;
	}
	Type type = 1;
	string id = 2 [(gogoproto.customname) = "ID"];
}

message Message {
	string text = 1;
	repeated Attachment attachments = 2;
	Endpoint source = 4;
	repeated Endpoint destinations = 5;
	string title = 8;
	repeated Reference text_refs = 9; // References from the message body text
	string summary = 10;
}

message EndpointList {
	repeated Endpoint endpoints = 1;
}

message Endpoint {
	enum Channel {
		ENDPOINT_CHANNEL_APP = 0;
		ENDPOINT_CHANNEL_SMS = 1;
		ENDPOINT_CHANNEL_VOICE = 2;
		ENDPOINT_CHANNEL_EMAIL = 3;
	}
	Channel channel = 1;
	string id = 2 [(gogoproto.customname) = "ID"];
}

message MessageUpdate {
	// thread_item_id is the ID of the item that was modified
	string thread_item_id = 1 [(gogoproto.customname) = "ThreadItemID"];
	// message is the new message content
	Message message = 2;

}

message MessageDelete {
	// thread_item_id is the ID of the item that was deleted
	string thread_item_id = 1 [(gogoproto.customname) = "ThreadItemID"];
}

message Attachment {
	string title = 2;
	string url = 3 [(gogoproto.customname) = "URL"];
	string user_title = 4;
	string content_id = 5 [(gogoproto.customname) = "ContentID"];
	oneof data {
		ImageAttachment image = 10;
		AudioAttachment audio = 11;
		GenericAttachment generic = 12;
		VisitAttachment visit = 13;
		CarePlanAttachment care_plan = 14;
		VideoAttachment video = 15;
		PaymentRequestAttachment payment_request = 16;
		DocumentAttachment document = 17;
	}
}

message ImageAttachment {
	string mimetype = 1;
	string media_id = 2 [(gogoproto.customname) = "MediaID"];
	uint32 width = 3;
	uint32 height = 4;
}

message VideoAttachment {
	string mimetype = 1;
	string media_id = 2 [(gogoproto.customname) = "MediaID"];
	uint64 duration_ns = 4 [(gogoproto.customname) = "DurationNS"];
}

message AudioAttachment {
	string mimetype = 1;
	string media_id = 2 [(gogoproto.customname) = "MediaID"];
	uint32 deprecated_duration_in_seconds = 3; // Deprecated
	uint64 duration_ns = 4 [(gogoproto.customname) = "DurationNS"];
}

message DocumentAttachment {
	string mimetype = 1;
	string media_id = 2 [(gogoproto.customname) = "MediaID"];
	string name = 3;
}

message GenericAttachment {
	string mimetype = 1;
	string url = 2 [(gogoproto.customname) = "URL"];
}

message VisitAttachment {
	string visit_id = 1 [(gogoproto.customname) = "VisitID"];
	string visit_name = 2;
}

message CarePlanAttachment {
	string care_plan_id = 1 [(gogoproto.customname) = "CarePlanID"];
	string care_plan_name = 2;
}

message PaymentRequestAttachment {
	string payment_id = 1 [(gogoproto.customname) = "PaymentID"];
}

message Query {
	// All expressions are required to match (i.e. AND)
	repeated Expr expressions = 1;
}

message Expr {
	enum Flag {
		EXPR_FLAG_INVALID = 0;
		EXPR_FLAG_UNREAD = 1;
		EXPR_FLAG_UNREAD_REFERENCE = 2;
		EXPR_FLAG_FOLLOWING = 3;
	}
	// This is separate from the top-level thread type to handle logical types like "patient"
	enum ThreadType {
		EXPR_THREAD_TYPE_INVALID = 0;
		EXPR_THREAD_TYPE_PATIENT = 1;
		EXPR_THREAD_TYPE_TEAM = 2;
		EXPR_THREAD_TYPE_SUPPORT = 3;
		EXPR_THREAD_TYPE_PATIENT_SECURE = 4;
		EXPR_THREAD_TYPE_PATIENT_STANDARD = 5;
	}

	bool not = 1;
	oneof value {
		string token = 2;
		Flag flag = 3;
		ThreadType thread_type = 4;
	}
}
