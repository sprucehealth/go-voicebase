// Code generated by protoc-gen-gogo.
// source: models.proto
// DO NOT EDIT!

/*
	Package rawmsg is a generated protocol buffer package.

	It is generated from these files:
		models.proto

	It has these top-level messages:
		TwilioParams
		SendGridIncomingEmail
		Incoming
*/
package rawmsg

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import strconv "strconv"

import strings "strings"
import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
import sort "sort"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TwilioEvent int32

const (
	TwilioEvent_PROCESS_INCOMING_CALL        TwilioEvent = 0
	TwilioEvent_PROVIDER_CALL_CONNECTED      TwilioEvent = 1
	TwilioEvent_PROVIDER_ENTERED_DIGITS      TwilioEvent = 2
	TwilioEvent_TWIML_REQUESTED_VOICEMAIL    TwilioEvent = 3
	TwilioEvent_PROCESS_INCOMING_CALL_STATUS TwilioEvent = 4
	TwilioEvent_PROCESS_OUTGOING_CALL        TwilioEvent = 6
	TwilioEvent_PROCESS_VOICEMAIL            TwilioEvent = 7
	TwilioEvent_PROCESS_OUTGOING_CALL_STATUS TwilioEvent = 8
	TwilioEvent_PROCESS_SMS_STATUS           TwilioEvent = 9
	TwilioEvent_NO_OP                        TwilioEvent = 10
)

var TwilioEvent_name = map[int32]string{
	0:  "PROCESS_INCOMING_CALL",
	1:  "PROVIDER_CALL_CONNECTED",
	2:  "PROVIDER_ENTERED_DIGITS",
	3:  "TWIML_REQUESTED_VOICEMAIL",
	4:  "PROCESS_INCOMING_CALL_STATUS",
	6:  "PROCESS_OUTGOING_CALL",
	7:  "PROCESS_VOICEMAIL",
	8:  "PROCESS_OUTGOING_CALL_STATUS",
	9:  "PROCESS_SMS_STATUS",
	10: "NO_OP",
}
var TwilioEvent_value = map[string]int32{
	"PROCESS_INCOMING_CALL":        0,
	"PROVIDER_CALL_CONNECTED":      1,
	"PROVIDER_ENTERED_DIGITS":      2,
	"TWIML_REQUESTED_VOICEMAIL":    3,
	"PROCESS_INCOMING_CALL_STATUS": 4,
	"PROCESS_OUTGOING_CALL":        6,
	"PROCESS_VOICEMAIL":            7,
	"PROCESS_OUTGOING_CALL_STATUS": 8,
	"PROCESS_SMS_STATUS":           9,
	"NO_OP":                        10,
}

type TwilioParams_CallStatus int32

const (
	TwilioParams_CALL_STATUS_UNDEFINED TwilioParams_CallStatus = 0
	TwilioParams_QUEUED                TwilioParams_CallStatus = 1
	TwilioParams_RINGING               TwilioParams_CallStatus = 2
	TwilioParams_IN_PROGRESS           TwilioParams_CallStatus = 3
	TwilioParams_COMPLETED             TwilioParams_CallStatus = 4
	TwilioParams_BUSY                  TwilioParams_CallStatus = 5
	TwilioParams_FAILED                TwilioParams_CallStatus = 6
	TwilioParams_NO_ANSWER             TwilioParams_CallStatus = 7
	TwilioParams_CANCELED              TwilioParams_CallStatus = 8
	TwilioParams_ANSWERED              TwilioParams_CallStatus = 9
	TwilioParams_INITIATED             TwilioParams_CallStatus = 10
)

var TwilioParams_CallStatus_name = map[int32]string{
	0:  "CALL_STATUS_UNDEFINED",
	1:  "QUEUED",
	2:  "RINGING",
	3:  "IN_PROGRESS",
	4:  "COMPLETED",
	5:  "BUSY",
	6:  "FAILED",
	7:  "NO_ANSWER",
	8:  "CANCELED",
	9:  "ANSWERED",
	10: "INITIATED",
}
var TwilioParams_CallStatus_value = map[string]int32{
	"CALL_STATUS_UNDEFINED": 0,
	"QUEUED":                1,
	"RINGING":               2,
	"IN_PROGRESS":           3,
	"COMPLETED":             4,
	"BUSY":                  5,
	"FAILED":                6,
	"NO_ANSWER":             7,
	"CANCELED":              8,
	"ANSWERED":              9,
	"INITIATED":             10,
}

type TwilioParams_MessageStatus int32

const (
	TwilioParams_MSG_STATUS_INVALID     TwilioParams_MessageStatus = 0
	TwilioParams_MSG_STATUS_QUEUED      TwilioParams_MessageStatus = 1
	TwilioParams_MSG_STATUS_SENDING     TwilioParams_MessageStatus = 2
	TwilioParams_MSG_STATUS_FAILED      TwilioParams_MessageStatus = 3
	TwilioParams_MSG_STATUS_SENT        TwilioParams_MessageStatus = 4
	TwilioParams_MSG_STATUS_DELIVERED   TwilioParams_MessageStatus = 5
	TwilioParams_MSG_STATUS_UNDELIVERED TwilioParams_MessageStatus = 6
)

var TwilioParams_MessageStatus_name = map[int32]string{
	0: "MSG_STATUS_INVALID",
	1: "MSG_STATUS_QUEUED",
	2: "MSG_STATUS_SENDING",
	3: "MSG_STATUS_FAILED",
	4: "MSG_STATUS_SENT",
	5: "MSG_STATUS_DELIVERED",
	6: "MSG_STATUS_UNDELIVERED",
}
var TwilioParams_MessageStatus_value = map[string]int32{
	"MSG_STATUS_INVALID":     0,
	"MSG_STATUS_QUEUED":      1,
	"MSG_STATUS_SENDING":     2,
	"MSG_STATUS_FAILED":      3,
	"MSG_STATUS_SENT":        4,
	"MSG_STATUS_DELIVERED":   5,
	"MSG_STATUS_UNDELIVERED": 6,
}

type TwilioParams_TranscriptionStatus int32

const (
	TwilioParams_TRANSCRIPTION_STATUS_UNKNOWN   TwilioParams_TranscriptionStatus = 0
	TwilioParams_TRANSCRIPTION_STATUS_COMPLETED TwilioParams_TranscriptionStatus = 1
	TwilioParams_TRANSCRIPTION_STATUS_FAILED    TwilioParams_TranscriptionStatus = 2
)

var TwilioParams_TranscriptionStatus_name = map[int32]string{
	0: "TRANSCRIPTION_STATUS_UNKNOWN",
	1: "TRANSCRIPTION_STATUS_COMPLETED",
	2: "TRANSCRIPTION_STATUS_FAILED",
}
var TwilioParams_TranscriptionStatus_value = map[string]int32{
	"TRANSCRIPTION_STATUS_UNKNOWN":   0,
	"TRANSCRIPTION_STATUS_COMPLETED": 1,
	"TRANSCRIPTION_STATUS_FAILED":    2,
}

type TwilioParams_Direction int32

const (
	TwilioParams_DIRECTION_UNDEFINED TwilioParams_Direction = 0
	TwilioParams_INBOUND             TwilioParams_Direction = 1
	TwilioParams_OUTBOUND_DIAL       TwilioParams_Direction = 2
	TwilioParams_OUTBOUND_API        TwilioParams_Direction = 3
)

var TwilioParams_Direction_name = map[int32]string{
	0: "DIRECTION_UNDEFINED",
	1: "INBOUND",
	2: "OUTBOUND_DIAL",
	3: "OUTBOUND_API",
}
var TwilioParams_Direction_value = map[string]int32{
	"DIRECTION_UNDEFINED": 0,
	"INBOUND":             1,
	"OUTBOUND_DIAL":       2,
	"OUTBOUND_API":        3,
}

type Incoming_Type int32

const (
	Incoming_TWILIO_SMS       Incoming_Type = 0
	Incoming_SENDGRID_EMAIL   Incoming_Type = 1
	Incoming_TWILIO_VOICEMAIL Incoming_Type = 2
)

var Incoming_Type_name = map[int32]string{
	0: "TWILIO_SMS",
	1: "SENDGRID_EMAIL",
	2: "TWILIO_VOICEMAIL",
}
var Incoming_Type_value = map[string]int32{
	"TWILIO_SMS":       0,
	"SENDGRID_EMAIL":   1,
	"TWILIO_VOICEMAIL": 2,
}

type TwilioParams struct {
	CallSID            string                          `protobuf:"bytes,1,opt,name=call_sid,proto3" json:"call_sid,omitempty"`
	AccountSID         string                          `protobuf:"bytes,2,opt,name=account_sid,proto3" json:"account_sid,omitempty"`
	From               string                          `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                 string                          `protobuf:"bytes,4,opt,name=to_number,proto3" json:"to_number,omitempty"`
	CallStatus         TwilioParams_CallStatus         `protobuf:"varint,5,opt,name=call_status,proto3,enum=rawmsg.TwilioParams_CallStatus" json:"call_status,omitempty"`
	APIVersion         string                          `protobuf:"bytes,6,opt,name=api_version,proto3" json:"api_version,omitempty"`
	Direction          TwilioParams_Direction          `protobuf:"varint,7,opt,name=direction,proto3,enum=rawmsg.TwilioParams_Direction" json:"direction,omitempty"`
	CallDuration       uint32                          `protobuf:"varint,8,opt,name=call_duration,proto3" json:"call_duration,omitempty"`
	RecordingURL       string                          `protobuf:"bytes,9,opt,name=recording_url,proto3" json:"recording_url,omitempty"`
	RecordingSID       string                          `protobuf:"bytes,10,opt,name=recording_sid,proto3" json:"recording_sid,omitempty"`
	RecordingDuration  uint32                          `protobuf:"varint,11,opt,name=recording_duration,proto3" json:"recording_duration,omitempty"`
	Digits             string                          `protobuf:"bytes,12,opt,name=digits,proto3" json:"digits,omitempty"`
	MessageSID         string                          `protobuf:"bytes,13,opt,name=message_sid,proto3" json:"message_sid,omitempty"`
	SMSSID             string                          `protobuf:"bytes,14,opt,name=sms_sid,proto3" json:"sms_sid,omitempty"`
	Body               string                          `protobuf:"bytes,15,opt,name=body,proto3" json:"body,omitempty"`
	NumMedia           uint32                          `protobuf:"varint,16,opt,name=num_media,proto3" json:"num_media,omitempty"`
	MediaItems         []*TwilioParams_TwilioMediaItem `protobuf:"bytes,17,rep,name=media_items" json:"media_items,omitempty"`
	MessagingServiceID string                          `protobuf:"bytes,18,opt,name=messaging_service_id,proto3" json:"messaging_service_id,omitempty"`
	// these three parameters are only present in a twilio request
	// attempting to get a twiml document to execute on the queued caller's
	// end before the two parties are connected.
	QueueSID        string `protobuf:"bytes,19,opt,name=queue_sid,proto3" json:"queue_sid,omitempty"`
	QueueTime       uint32 `protobuf:"varint,20,opt,name=queue_time,proto3" json:"queue_time,omitempty"`
	DequeingCallSID string `protobuf:"bytes,21,opt,name=dequeuing_call_sid,proto3" json:"dequeuing_call_sid,omitempty"`
	// this parameter is only present for status callbacks from a dial twiml verb
	ParentCallSID    string                  `protobuf:"bytes,22,opt,name=parent_call_sid,proto3" json:"parent_call_sid,omitempty"`
	DialCallStatus   TwilioParams_CallStatus `protobuf:"varint,23,opt,name=dial_call_status,proto3,enum=rawmsg.TwilioParams_CallStatus" json:"dial_call_status,omitempty"`
	DialCallDuration uint32                  `protobuf:"varint,24,opt,name=dial_call_duration,proto3" json:"dial_call_duration,omitempty"`
	// Deprecated
	DeprecatedRecordingMediaID uint64                     `protobuf:"varint,25,opt,name=deprecated_recording_media_id,proto3" json:"deprecated_recording_media_id,omitempty"`
	MessageStatus              TwilioParams_MessageStatus `protobuf:"varint,26,opt,name=message_status,proto3,enum=rawmsg.TwilioParams_MessageStatus" json:"message_status,omitempty"`
	DialCallSID                string                     `protobuf:"bytes,27,opt,name=dial_call_sid,proto3" json:"dial_call_sid,omitempty"`
	RecordingMediaID           string                     `protobuf:"bytes,28,opt,name=recording_media_id,proto3" json:"recording_media_id,omitempty"`
	// transcription parameters
	TranscriptionStatus TwilioParams_TranscriptionStatus `protobuf:"varint,29,opt,name=transcription_status,proto3,enum=rawmsg.TwilioParams_TranscriptionStatus" json:"transcription_status,omitempty"`
	TranscriptionURL    string                           `protobuf:"bytes,30,opt,name=transcription_url,proto3" json:"transcription_url,omitempty"`
	TranscriptionText   string                           `protobuf:"bytes,31,opt,name=transcription_text,proto3" json:"transcription_text,omitempty"`
	TranscriptionSID    string                           `protobuf:"bytes,32,opt,name=transcription_sid,proto3" json:"transcription_sid,omitempty"`
	// infrequently used parameters
	ForwardedFrom string `protobuf:"bytes,100,opt,name=forwarded_from,proto3" json:"forwarded_from,omitempty"`
	CallerName    string `protobuf:"bytes,101,opt,name=caller_name,proto3" json:"caller_name,omitempty"`
	FromCity      string `protobuf:"bytes,102,opt,name=from_city,proto3" json:"from_city,omitempty"`
	FromState     string `protobuf:"bytes,103,opt,name=from_state,proto3" json:"from_state,omitempty"`
	FromZip       string `protobuf:"bytes,104,opt,name=from_zip,proto3" json:"from_zip,omitempty"`
	FromCountry   string `protobuf:"bytes,105,opt,name=from_country,proto3" json:"from_country,omitempty"`
	ToCity        string `protobuf:"bytes,106,opt,name=to_city,proto3" json:"to_city,omitempty"`
	ToState       string `protobuf:"bytes,107,opt,name=to_state,proto3" json:"to_state,omitempty"`
	ToZip         string `protobuf:"bytes,108,opt,name=to_zip,proto3" json:"to_zip,omitempty"`
	ToCountry     string `protobuf:"bytes,109,opt,name=to_country,proto3" json:"to_country,omitempty"`
}

func (m *TwilioParams) Reset()      { *m = TwilioParams{} }
func (*TwilioParams) ProtoMessage() {}

func (m *TwilioParams) GetMediaItems() []*TwilioParams_TwilioMediaItem {
	if m != nil {
		return m.MediaItems
	}
	return nil
}

type TwilioParams_TwilioMediaItem struct {
	ContentType  string `protobuf:"bytes,1,opt,name=content_type,proto3" json:"content_type,omitempty"`
	MediaURL     string `protobuf:"bytes,2,opt,name=media_url,proto3" json:"media_url,omitempty"`
	DeprecatedID uint64 `protobuf:"varint,3,opt,name=deprecated_id,proto3" json:"deprecated_id,omitempty"`
	ID           string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *TwilioParams_TwilioMediaItem) Reset()      { *m = TwilioParams_TwilioMediaItem{} }
func (*TwilioParams_TwilioMediaItem) ProtoMessage() {}

type SendGridIncomingEmail struct {
	Headers        string                              `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Text           string                              `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	HTML           string                              `protobuf:"bytes,3,opt,name=html,proto3" json:"html,omitempty"`
	Sender         string                              `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient      string                              `protobuf:"bytes,5,opt,name=recipient,proto3" json:"recipient,omitempty"`
	CC             string                              `protobuf:"bytes,6,opt,name=cc,proto3" json:"cc,omitempty"`
	Subject        string                              `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	DKIM           string                              `protobuf:"bytes,8,opt,name=dkim,proto3" json:"dkim,omitempty"`
	SPF            string                              `protobuf:"bytes,9,opt,name=spf,proto3" json:"spf,omitempty"`
	SMTPEnvelope   string                              `protobuf:"bytes,10,opt,name=smtp_envelope,proto3" json:"smtp_envelope,omitempty"`
	Charsets       string                              `protobuf:"bytes,11,opt,name=charsets,proto3" json:"charsets,omitempty"`
	SpamScore      string                              `protobuf:"bytes,12,opt,name=spam_score,proto3" json:"spam_score,omitempty"`
	SpamReport     string                              `protobuf:"bytes,13,opt,name=spam_report,proto3" json:"spam_report,omitempty"`
	NumAttachments uint32                              `protobuf:"varint,14,opt,name=num_attachments,proto3" json:"num_attachments,omitempty"`
	Attachments    []*SendGridIncomingEmail_Attachment `protobuf:"bytes,15,rep,name=attachments" json:"attachments,omitempty"`
}

func (m *SendGridIncomingEmail) Reset()      { *m = SendGridIncomingEmail{} }
func (*SendGridIncomingEmail) ProtoMessage() {}

func (m *SendGridIncomingEmail) GetAttachments() []*SendGridIncomingEmail_Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

type SendGridIncomingEmail_Attachment struct {
	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Filename     string `protobuf:"bytes,2,opt,name=file_name,proto3" json:"file_name,omitempty"`
	DeprecatedID uint64 `protobuf:"varint,3,opt,name=deprecated_id,proto3" json:"deprecated_id,omitempty"`
	ID           string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *SendGridIncomingEmail_Attachment) Reset()      { *m = SendGridIncomingEmail_Attachment{} }
func (*SendGridIncomingEmail_Attachment) ProtoMessage() {}

// IncomingRawMessage represents a message parsed by the excommsapi layer
// and ready to be consumed by the excomms layer.
type Incoming struct {
	Type Incoming_Type `protobuf:"varint,1,opt,name=type,proto3,enum=rawmsg.Incoming_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Message:
	//	*Incoming_Twilio
	//	*Incoming_SendGrid
	Message   isIncoming_Message `protobuf_oneof:"message"`
	Timestamp uint64             `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ID        uint64             `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *Incoming) Reset()      { *m = Incoming{} }
func (*Incoming) ProtoMessage() {}

type isIncoming_Message interface {
	isIncoming_Message()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type Incoming_Twilio struct {
	Twilio *TwilioParams `protobuf:"bytes,2,opt,name=twilio,oneof"`
}
type Incoming_SendGrid struct {
	SendGrid *SendGridIncomingEmail `protobuf:"bytes,3,opt,name=sendgrid,oneof"`
}

func (*Incoming_Twilio) isIncoming_Message()   {}
func (*Incoming_SendGrid) isIncoming_Message() {}

func (m *Incoming) GetMessage() isIncoming_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Incoming) GetTwilio() *TwilioParams {
	if x, ok := m.GetMessage().(*Incoming_Twilio); ok {
		return x.Twilio
	}
	return nil
}

func (m *Incoming) GetSendGrid() *SendGridIncomingEmail {
	if x, ok := m.GetMessage().(*Incoming_SendGrid); ok {
		return x.SendGrid
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Incoming) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), []interface{}) {
	return _Incoming_OneofMarshaler, _Incoming_OneofUnmarshaler, []interface{}{
		(*Incoming_Twilio)(nil),
		(*Incoming_SendGrid)(nil),
	}
}

func _Incoming_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Incoming)
	// message
	switch x := m.Message.(type) {
	case *Incoming_Twilio:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Twilio); err != nil {
			return err
		}
	case *Incoming_SendGrid:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SendGrid); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Incoming.Message has unexpected type %T", x)
	}
	return nil
}

func _Incoming_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Incoming)
	switch tag {
	case 2: // message.twilio
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TwilioParams)
		err := b.DecodeMessage(msg)
		m.Message = &Incoming_Twilio{msg}
		return true, err
	case 3: // message.sendgrid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SendGridIncomingEmail)
		err := b.DecodeMessage(msg)
		m.Message = &Incoming_SendGrid{msg}
		return true, err
	default:
		return false, nil
	}
}

func init() {
	proto.RegisterType((*TwilioParams)(nil), "rawmsg.TwilioParams")
	proto.RegisterType((*TwilioParams_TwilioMediaItem)(nil), "rawmsg.TwilioParams.TwilioMediaItem")
	proto.RegisterType((*SendGridIncomingEmail)(nil), "rawmsg.SendGridIncomingEmail")
	proto.RegisterType((*SendGridIncomingEmail_Attachment)(nil), "rawmsg.SendGridIncomingEmail.Attachment")
	proto.RegisterType((*Incoming)(nil), "rawmsg.Incoming")
	proto.RegisterEnum("rawmsg.TwilioEvent", TwilioEvent_name, TwilioEvent_value)
	proto.RegisterEnum("rawmsg.TwilioParams_CallStatus", TwilioParams_CallStatus_name, TwilioParams_CallStatus_value)
	proto.RegisterEnum("rawmsg.TwilioParams_MessageStatus", TwilioParams_MessageStatus_name, TwilioParams_MessageStatus_value)
	proto.RegisterEnum("rawmsg.TwilioParams_TranscriptionStatus", TwilioParams_TranscriptionStatus_name, TwilioParams_TranscriptionStatus_value)
	proto.RegisterEnum("rawmsg.TwilioParams_Direction", TwilioParams_Direction_name, TwilioParams_Direction_value)
	proto.RegisterEnum("rawmsg.Incoming_Type", Incoming_Type_name, Incoming_Type_value)
}
func (x TwilioEvent) String() string {
	s, ok := TwilioEvent_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TwilioParams_CallStatus) String() string {
	s, ok := TwilioParams_CallStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TwilioParams_MessageStatus) String() string {
	s, ok := TwilioParams_MessageStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TwilioParams_TranscriptionStatus) String() string {
	s, ok := TwilioParams_TranscriptionStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TwilioParams_Direction) String() string {
	s, ok := TwilioParams_Direction_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x Incoming_Type) String() string {
	s, ok := Incoming_Type_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *TwilioParams) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*TwilioParams)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.CallSID != that1.CallSID {
		return false
	}
	if this.AccountSID != that1.AccountSID {
		return false
	}
	if this.From != that1.From {
		return false
	}
	if this.To != that1.To {
		return false
	}
	if this.CallStatus != that1.CallStatus {
		return false
	}
	if this.APIVersion != that1.APIVersion {
		return false
	}
	if this.Direction != that1.Direction {
		return false
	}
	if this.CallDuration != that1.CallDuration {
		return false
	}
	if this.RecordingURL != that1.RecordingURL {
		return false
	}
	if this.RecordingSID != that1.RecordingSID {
		return false
	}
	if this.RecordingDuration != that1.RecordingDuration {
		return false
	}
	if this.Digits != that1.Digits {
		return false
	}
	if this.MessageSID != that1.MessageSID {
		return false
	}
	if this.SMSSID != that1.SMSSID {
		return false
	}
	if this.Body != that1.Body {
		return false
	}
	if this.NumMedia != that1.NumMedia {
		return false
	}
	if len(this.MediaItems) != len(that1.MediaItems) {
		return false
	}
	for i := range this.MediaItems {
		if !this.MediaItems[i].Equal(that1.MediaItems[i]) {
			return false
		}
	}
	if this.MessagingServiceID != that1.MessagingServiceID {
		return false
	}
	if this.QueueSID != that1.QueueSID {
		return false
	}
	if this.QueueTime != that1.QueueTime {
		return false
	}
	if this.DequeingCallSID != that1.DequeingCallSID {
		return false
	}
	if this.ParentCallSID != that1.ParentCallSID {
		return false
	}
	if this.DialCallStatus != that1.DialCallStatus {
		return false
	}
	if this.DialCallDuration != that1.DialCallDuration {
		return false
	}
	if this.DeprecatedRecordingMediaID != that1.DeprecatedRecordingMediaID {
		return false
	}
	if this.MessageStatus != that1.MessageStatus {
		return false
	}
	if this.DialCallSID != that1.DialCallSID {
		return false
	}
	if this.RecordingMediaID != that1.RecordingMediaID {
		return false
	}
	if this.TranscriptionStatus != that1.TranscriptionStatus {
		return false
	}
	if this.TranscriptionURL != that1.TranscriptionURL {
		return false
	}
	if this.TranscriptionText != that1.TranscriptionText {
		return false
	}
	if this.TranscriptionSID != that1.TranscriptionSID {
		return false
	}
	if this.ForwardedFrom != that1.ForwardedFrom {
		return false
	}
	if this.CallerName != that1.CallerName {
		return false
	}
	if this.FromCity != that1.FromCity {
		return false
	}
	if this.FromState != that1.FromState {
		return false
	}
	if this.FromZip != that1.FromZip {
		return false
	}
	if this.FromCountry != that1.FromCountry {
		return false
	}
	if this.ToCity != that1.ToCity {
		return false
	}
	if this.ToState != that1.ToState {
		return false
	}
	if this.ToZip != that1.ToZip {
		return false
	}
	if this.ToCountry != that1.ToCountry {
		return false
	}
	return true
}
func (this *TwilioParams_TwilioMediaItem) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*TwilioParams_TwilioMediaItem)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.ContentType != that1.ContentType {
		return false
	}
	if this.MediaURL != that1.MediaURL {
		return false
	}
	if this.DeprecatedID != that1.DeprecatedID {
		return false
	}
	if this.ID != that1.ID {
		return false
	}
	return true
}
func (this *SendGridIncomingEmail) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*SendGridIncomingEmail)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Headers != that1.Headers {
		return false
	}
	if this.Text != that1.Text {
		return false
	}
	if this.HTML != that1.HTML {
		return false
	}
	if this.Sender != that1.Sender {
		return false
	}
	if this.Recipient != that1.Recipient {
		return false
	}
	if this.CC != that1.CC {
		return false
	}
	if this.Subject != that1.Subject {
		return false
	}
	if this.DKIM != that1.DKIM {
		return false
	}
	if this.SPF != that1.SPF {
		return false
	}
	if this.SMTPEnvelope != that1.SMTPEnvelope {
		return false
	}
	if this.Charsets != that1.Charsets {
		return false
	}
	if this.SpamScore != that1.SpamScore {
		return false
	}
	if this.SpamReport != that1.SpamReport {
		return false
	}
	if this.NumAttachments != that1.NumAttachments {
		return false
	}
	if len(this.Attachments) != len(that1.Attachments) {
		return false
	}
	for i := range this.Attachments {
		if !this.Attachments[i].Equal(that1.Attachments[i]) {
			return false
		}
	}
	return true
}
func (this *SendGridIncomingEmail_Attachment) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*SendGridIncomingEmail_Attachment)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Type != that1.Type {
		return false
	}
	if this.Filename != that1.Filename {
		return false
	}
	if this.DeprecatedID != that1.DeprecatedID {
		return false
	}
	if this.ID != that1.ID {
		return false
	}
	return true
}
func (this *Incoming) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*Incoming)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.Type != that1.Type {
		return false
	}
	if that1.Message == nil {
		if this.Message != nil {
			return false
		}
	} else if this.Message == nil {
		return false
	} else if !this.Message.Equal(that1.Message) {
		return false
	}
	if this.Timestamp != that1.Timestamp {
		return false
	}
	if this.ID != that1.ID {
		return false
	}
	return true
}
func (this *Incoming_Twilio) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*Incoming_Twilio)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Twilio.Equal(that1.Twilio) {
		return false
	}
	return true
}
func (this *Incoming_SendGrid) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*Incoming_SendGrid)
	if !ok {
		return false
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.SendGrid.Equal(that1.SendGrid) {
		return false
	}
	return true
}
func (this *TwilioParams) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 46)
	s = append(s, "&rawmsg.TwilioParams{")
	s = append(s, "CallSID: "+fmt.Sprintf("%#v", this.CallSID)+",\n")
	s = append(s, "AccountSID: "+fmt.Sprintf("%#v", this.AccountSID)+",\n")
	s = append(s, "From: "+fmt.Sprintf("%#v", this.From)+",\n")
	s = append(s, "To: "+fmt.Sprintf("%#v", this.To)+",\n")
	s = append(s, "CallStatus: "+fmt.Sprintf("%#v", this.CallStatus)+",\n")
	s = append(s, "APIVersion: "+fmt.Sprintf("%#v", this.APIVersion)+",\n")
	s = append(s, "Direction: "+fmt.Sprintf("%#v", this.Direction)+",\n")
	s = append(s, "CallDuration: "+fmt.Sprintf("%#v", this.CallDuration)+",\n")
	s = append(s, "RecordingURL: "+fmt.Sprintf("%#v", this.RecordingURL)+",\n")
	s = append(s, "RecordingSID: "+fmt.Sprintf("%#v", this.RecordingSID)+",\n")
	s = append(s, "RecordingDuration: "+fmt.Sprintf("%#v", this.RecordingDuration)+",\n")
	s = append(s, "Digits: "+fmt.Sprintf("%#v", this.Digits)+",\n")
	s = append(s, "MessageSID: "+fmt.Sprintf("%#v", this.MessageSID)+",\n")
	s = append(s, "SMSSID: "+fmt.Sprintf("%#v", this.SMSSID)+",\n")
	s = append(s, "Body: "+fmt.Sprintf("%#v", this.Body)+",\n")
	s = append(s, "NumMedia: "+fmt.Sprintf("%#v", this.NumMedia)+",\n")
	if this.MediaItems != nil {
		s = append(s, "MediaItems: "+fmt.Sprintf("%#v", this.MediaItems)+",\n")
	}
	s = append(s, "MessagingServiceID: "+fmt.Sprintf("%#v", this.MessagingServiceID)+",\n")
	s = append(s, "QueueSID: "+fmt.Sprintf("%#v", this.QueueSID)+",\n")
	s = append(s, "QueueTime: "+fmt.Sprintf("%#v", this.QueueTime)+",\n")
	s = append(s, "DequeingCallSID: "+fmt.Sprintf("%#v", this.DequeingCallSID)+",\n")
	s = append(s, "ParentCallSID: "+fmt.Sprintf("%#v", this.ParentCallSID)+",\n")
	s = append(s, "DialCallStatus: "+fmt.Sprintf("%#v", this.DialCallStatus)+",\n")
	s = append(s, "DialCallDuration: "+fmt.Sprintf("%#v", this.DialCallDuration)+",\n")
	s = append(s, "DeprecatedRecordingMediaID: "+fmt.Sprintf("%#v", this.DeprecatedRecordingMediaID)+",\n")
	s = append(s, "MessageStatus: "+fmt.Sprintf("%#v", this.MessageStatus)+",\n")
	s = append(s, "DialCallSID: "+fmt.Sprintf("%#v", this.DialCallSID)+",\n")
	s = append(s, "RecordingMediaID: "+fmt.Sprintf("%#v", this.RecordingMediaID)+",\n")
	s = append(s, "TranscriptionStatus: "+fmt.Sprintf("%#v", this.TranscriptionStatus)+",\n")
	s = append(s, "TranscriptionURL: "+fmt.Sprintf("%#v", this.TranscriptionURL)+",\n")
	s = append(s, "TranscriptionText: "+fmt.Sprintf("%#v", this.TranscriptionText)+",\n")
	s = append(s, "TranscriptionSID: "+fmt.Sprintf("%#v", this.TranscriptionSID)+",\n")
	s = append(s, "ForwardedFrom: "+fmt.Sprintf("%#v", this.ForwardedFrom)+",\n")
	s = append(s, "CallerName: "+fmt.Sprintf("%#v", this.CallerName)+",\n")
	s = append(s, "FromCity: "+fmt.Sprintf("%#v", this.FromCity)+",\n")
	s = append(s, "FromState: "+fmt.Sprintf("%#v", this.FromState)+",\n")
	s = append(s, "FromZip: "+fmt.Sprintf("%#v", this.FromZip)+",\n")
	s = append(s, "FromCountry: "+fmt.Sprintf("%#v", this.FromCountry)+",\n")
	s = append(s, "ToCity: "+fmt.Sprintf("%#v", this.ToCity)+",\n")
	s = append(s, "ToState: "+fmt.Sprintf("%#v", this.ToState)+",\n")
	s = append(s, "ToZip: "+fmt.Sprintf("%#v", this.ToZip)+",\n")
	s = append(s, "ToCountry: "+fmt.Sprintf("%#v", this.ToCountry)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TwilioParams_TwilioMediaItem) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&rawmsg.TwilioParams_TwilioMediaItem{")
	s = append(s, "ContentType: "+fmt.Sprintf("%#v", this.ContentType)+",\n")
	s = append(s, "MediaURL: "+fmt.Sprintf("%#v", this.MediaURL)+",\n")
	s = append(s, "DeprecatedID: "+fmt.Sprintf("%#v", this.DeprecatedID)+",\n")
	s = append(s, "ID: "+fmt.Sprintf("%#v", this.ID)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SendGridIncomingEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 19)
	s = append(s, "&rawmsg.SendGridIncomingEmail{")
	s = append(s, "Headers: "+fmt.Sprintf("%#v", this.Headers)+",\n")
	s = append(s, "Text: "+fmt.Sprintf("%#v", this.Text)+",\n")
	s = append(s, "HTML: "+fmt.Sprintf("%#v", this.HTML)+",\n")
	s = append(s, "Sender: "+fmt.Sprintf("%#v", this.Sender)+",\n")
	s = append(s, "Recipient: "+fmt.Sprintf("%#v", this.Recipient)+",\n")
	s = append(s, "CC: "+fmt.Sprintf("%#v", this.CC)+",\n")
	s = append(s, "Subject: "+fmt.Sprintf("%#v", this.Subject)+",\n")
	s = append(s, "DKIM: "+fmt.Sprintf("%#v", this.DKIM)+",\n")
	s = append(s, "SPF: "+fmt.Sprintf("%#v", this.SPF)+",\n")
	s = append(s, "SMTPEnvelope: "+fmt.Sprintf("%#v", this.SMTPEnvelope)+",\n")
	s = append(s, "Charsets: "+fmt.Sprintf("%#v", this.Charsets)+",\n")
	s = append(s, "SpamScore: "+fmt.Sprintf("%#v", this.SpamScore)+",\n")
	s = append(s, "SpamReport: "+fmt.Sprintf("%#v", this.SpamReport)+",\n")
	s = append(s, "NumAttachments: "+fmt.Sprintf("%#v", this.NumAttachments)+",\n")
	if this.Attachments != nil {
		s = append(s, "Attachments: "+fmt.Sprintf("%#v", this.Attachments)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SendGridIncomingEmail_Attachment) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&rawmsg.SendGridIncomingEmail_Attachment{")
	s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	s = append(s, "Filename: "+fmt.Sprintf("%#v", this.Filename)+",\n")
	s = append(s, "DeprecatedID: "+fmt.Sprintf("%#v", this.DeprecatedID)+",\n")
	s = append(s, "ID: "+fmt.Sprintf("%#v", this.ID)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Incoming) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&rawmsg.Incoming{")
	s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	if this.Message != nil {
		s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	}
	s = append(s, "Timestamp: "+fmt.Sprintf("%#v", this.Timestamp)+",\n")
	s = append(s, "ID: "+fmt.Sprintf("%#v", this.ID)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Incoming_Twilio) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&rawmsg.Incoming_Twilio{` +
		`Twilio:` + fmt.Sprintf("%#v", this.Twilio) + `}`}, ", ")
	return s
}
func (this *Incoming_SendGrid) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&rawmsg.Incoming_SendGrid{` +
		`SendGrid:` + fmt.Sprintf("%#v", this.SendGrid) + `}`}, ", ")
	return s
}
func valueToGoStringModels(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func extensionToGoStringModels(e map[int32]github_com_gogo_protobuf_proto.Extension) string {
	if e == nil {
		return "nil"
	}
	s := "map[int32]proto.Extension{"
	keys := make([]int, 0, len(e))
	for k := range e {
		keys = append(keys, int(k))
	}
	sort.Ints(keys)
	ss := []string{}
	for _, k := range keys {
		ss = append(ss, strconv.Itoa(k)+": "+e[int32(k)].GoString())
	}
	s += strings.Join(ss, ",") + "}"
	return s
}
func (m *TwilioParams) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *TwilioParams) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.CallSID) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModels(data, i, uint64(len(m.CallSID)))
		i += copy(data[i:], m.CallSID)
	}
	if len(m.AccountSID) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModels(data, i, uint64(len(m.AccountSID)))
		i += copy(data[i:], m.AccountSID)
	}
	if len(m.From) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.From)))
		i += copy(data[i:], m.From)
	}
	if len(m.To) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModels(data, i, uint64(len(m.To)))
		i += copy(data[i:], m.To)
	}
	if m.CallStatus != 0 {
		data[i] = 0x28
		i++
		i = encodeVarintModels(data, i, uint64(m.CallStatus))
	}
	if len(m.APIVersion) > 0 {
		data[i] = 0x32
		i++
		i = encodeVarintModels(data, i, uint64(len(m.APIVersion)))
		i += copy(data[i:], m.APIVersion)
	}
	if m.Direction != 0 {
		data[i] = 0x38
		i++
		i = encodeVarintModels(data, i, uint64(m.Direction))
	}
	if m.CallDuration != 0 {
		data[i] = 0x40
		i++
		i = encodeVarintModels(data, i, uint64(m.CallDuration))
	}
	if len(m.RecordingURL) > 0 {
		data[i] = 0x4a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.RecordingURL)))
		i += copy(data[i:], m.RecordingURL)
	}
	if len(m.RecordingSID) > 0 {
		data[i] = 0x52
		i++
		i = encodeVarintModels(data, i, uint64(len(m.RecordingSID)))
		i += copy(data[i:], m.RecordingSID)
	}
	if m.RecordingDuration != 0 {
		data[i] = 0x58
		i++
		i = encodeVarintModels(data, i, uint64(m.RecordingDuration))
	}
	if len(m.Digits) > 0 {
		data[i] = 0x62
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Digits)))
		i += copy(data[i:], m.Digits)
	}
	if len(m.MessageSID) > 0 {
		data[i] = 0x6a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.MessageSID)))
		i += copy(data[i:], m.MessageSID)
	}
	if len(m.SMSSID) > 0 {
		data[i] = 0x72
		i++
		i = encodeVarintModels(data, i, uint64(len(m.SMSSID)))
		i += copy(data[i:], m.SMSSID)
	}
	if len(m.Body) > 0 {
		data[i] = 0x7a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Body)))
		i += copy(data[i:], m.Body)
	}
	if m.NumMedia != 0 {
		data[i] = 0x80
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(m.NumMedia))
	}
	if len(m.MediaItems) > 0 {
		for _, msg := range m.MediaItems {
			data[i] = 0x8a
			i++
			data[i] = 0x1
			i++
			i = encodeVarintModels(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.MessagingServiceID) > 0 {
		data[i] = 0x92
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.MessagingServiceID)))
		i += copy(data[i:], m.MessagingServiceID)
	}
	if len(m.QueueSID) > 0 {
		data[i] = 0x9a
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.QueueSID)))
		i += copy(data[i:], m.QueueSID)
	}
	if m.QueueTime != 0 {
		data[i] = 0xa0
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(m.QueueTime))
	}
	if len(m.DequeingCallSID) > 0 {
		data[i] = 0xaa
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.DequeingCallSID)))
		i += copy(data[i:], m.DequeingCallSID)
	}
	if len(m.ParentCallSID) > 0 {
		data[i] = 0xb2
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ParentCallSID)))
		i += copy(data[i:], m.ParentCallSID)
	}
	if m.DialCallStatus != 0 {
		data[i] = 0xb8
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(m.DialCallStatus))
	}
	if m.DialCallDuration != 0 {
		data[i] = 0xc0
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(m.DialCallDuration))
	}
	if m.DeprecatedRecordingMediaID != 0 {
		data[i] = 0xc8
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(m.DeprecatedRecordingMediaID))
	}
	if m.MessageStatus != 0 {
		data[i] = 0xd0
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(m.MessageStatus))
	}
	if len(m.DialCallSID) > 0 {
		data[i] = 0xda
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.DialCallSID)))
		i += copy(data[i:], m.DialCallSID)
	}
	if len(m.RecordingMediaID) > 0 {
		data[i] = 0xe2
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.RecordingMediaID)))
		i += copy(data[i:], m.RecordingMediaID)
	}
	if m.TranscriptionStatus != 0 {
		data[i] = 0xe8
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(m.TranscriptionStatus))
	}
	if len(m.TranscriptionURL) > 0 {
		data[i] = 0xf2
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.TranscriptionURL)))
		i += copy(data[i:], m.TranscriptionURL)
	}
	if len(m.TranscriptionText) > 0 {
		data[i] = 0xfa
		i++
		data[i] = 0x1
		i++
		i = encodeVarintModels(data, i, uint64(len(m.TranscriptionText)))
		i += copy(data[i:], m.TranscriptionText)
	}
	if len(m.TranscriptionSID) > 0 {
		data[i] = 0x82
		i++
		data[i] = 0x2
		i++
		i = encodeVarintModels(data, i, uint64(len(m.TranscriptionSID)))
		i += copy(data[i:], m.TranscriptionSID)
	}
	if len(m.ForwardedFrom) > 0 {
		data[i] = 0xa2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ForwardedFrom)))
		i += copy(data[i:], m.ForwardedFrom)
	}
	if len(m.CallerName) > 0 {
		data[i] = 0xaa
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.CallerName)))
		i += copy(data[i:], m.CallerName)
	}
	if len(m.FromCity) > 0 {
		data[i] = 0xb2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.FromCity)))
		i += copy(data[i:], m.FromCity)
	}
	if len(m.FromState) > 0 {
		data[i] = 0xba
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.FromState)))
		i += copy(data[i:], m.FromState)
	}
	if len(m.FromZip) > 0 {
		data[i] = 0xc2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.FromZip)))
		i += copy(data[i:], m.FromZip)
	}
	if len(m.FromCountry) > 0 {
		data[i] = 0xca
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.FromCountry)))
		i += copy(data[i:], m.FromCountry)
	}
	if len(m.ToCity) > 0 {
		data[i] = 0xd2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ToCity)))
		i += copy(data[i:], m.ToCity)
	}
	if len(m.ToState) > 0 {
		data[i] = 0xda
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ToState)))
		i += copy(data[i:], m.ToState)
	}
	if len(m.ToZip) > 0 {
		data[i] = 0xe2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ToZip)))
		i += copy(data[i:], m.ToZip)
	}
	if len(m.ToCountry) > 0 {
		data[i] = 0xea
		i++
		data[i] = 0x6
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ToCountry)))
		i += copy(data[i:], m.ToCountry)
	}
	return i, nil
}

func (m *TwilioParams_TwilioMediaItem) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *TwilioParams_TwilioMediaItem) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ContentType) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ContentType)))
		i += copy(data[i:], m.ContentType)
	}
	if len(m.MediaURL) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModels(data, i, uint64(len(m.MediaURL)))
		i += copy(data[i:], m.MediaURL)
	}
	if m.DeprecatedID != 0 {
		data[i] = 0x18
		i++
		i = encodeVarintModels(data, i, uint64(m.DeprecatedID))
	}
	if len(m.ID) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ID)))
		i += copy(data[i:], m.ID)
	}
	return i, nil
}

func (m *SendGridIncomingEmail) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *SendGridIncomingEmail) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Headers) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Headers)))
		i += copy(data[i:], m.Headers)
	}
	if len(m.Text) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Text)))
		i += copy(data[i:], m.Text)
	}
	if len(m.HTML) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.HTML)))
		i += copy(data[i:], m.HTML)
	}
	if len(m.Sender) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Sender)))
		i += copy(data[i:], m.Sender)
	}
	if len(m.Recipient) > 0 {
		data[i] = 0x2a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Recipient)))
		i += copy(data[i:], m.Recipient)
	}
	if len(m.CC) > 0 {
		data[i] = 0x32
		i++
		i = encodeVarintModels(data, i, uint64(len(m.CC)))
		i += copy(data[i:], m.CC)
	}
	if len(m.Subject) > 0 {
		data[i] = 0x3a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Subject)))
		i += copy(data[i:], m.Subject)
	}
	if len(m.DKIM) > 0 {
		data[i] = 0x42
		i++
		i = encodeVarintModels(data, i, uint64(len(m.DKIM)))
		i += copy(data[i:], m.DKIM)
	}
	if len(m.SPF) > 0 {
		data[i] = 0x4a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.SPF)))
		i += copy(data[i:], m.SPF)
	}
	if len(m.SMTPEnvelope) > 0 {
		data[i] = 0x52
		i++
		i = encodeVarintModels(data, i, uint64(len(m.SMTPEnvelope)))
		i += copy(data[i:], m.SMTPEnvelope)
	}
	if len(m.Charsets) > 0 {
		data[i] = 0x5a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Charsets)))
		i += copy(data[i:], m.Charsets)
	}
	if len(m.SpamScore) > 0 {
		data[i] = 0x62
		i++
		i = encodeVarintModels(data, i, uint64(len(m.SpamScore)))
		i += copy(data[i:], m.SpamScore)
	}
	if len(m.SpamReport) > 0 {
		data[i] = 0x6a
		i++
		i = encodeVarintModels(data, i, uint64(len(m.SpamReport)))
		i += copy(data[i:], m.SpamReport)
	}
	if m.NumAttachments != 0 {
		data[i] = 0x70
		i++
		i = encodeVarintModels(data, i, uint64(m.NumAttachments))
	}
	if len(m.Attachments) > 0 {
		for _, msg := range m.Attachments {
			data[i] = 0x7a
			i++
			i = encodeVarintModels(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *SendGridIncomingEmail_Attachment) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *SendGridIncomingEmail_Attachment) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Type)))
		i += copy(data[i:], m.Type)
	}
	if len(m.Filename) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModels(data, i, uint64(len(m.Filename)))
		i += copy(data[i:], m.Filename)
	}
	if m.DeprecatedID != 0 {
		data[i] = 0x18
		i++
		i = encodeVarintModels(data, i, uint64(m.DeprecatedID))
	}
	if len(m.ID) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModels(data, i, uint64(len(m.ID)))
		i += copy(data[i:], m.ID)
	}
	return i, nil
}

func (m *Incoming) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *Incoming) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 {
		data[i] = 0x8
		i++
		i = encodeVarintModels(data, i, uint64(m.Type))
	}
	if m.Message != nil {
		nn1, err := m.Message.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.Timestamp != 0 {
		data[i] = 0x20
		i++
		i = encodeVarintModels(data, i, uint64(m.Timestamp))
	}
	if m.ID != 0 {
		data[i] = 0x28
		i++
		i = encodeVarintModels(data, i, uint64(m.ID))
	}
	return i, nil
}

func (m *Incoming_Twilio) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Twilio != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModels(data, i, uint64(m.Twilio.Size()))
		n2, err := m.Twilio.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}
func (m *Incoming_SendGrid) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.SendGrid != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintModels(data, i, uint64(m.SendGrid.Size()))
		n3, err := m.SendGrid.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}
func encodeFixed64Models(data []byte, offset int, v uint64) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	data[offset+4] = uint8(v >> 32)
	data[offset+5] = uint8(v >> 40)
	data[offset+6] = uint8(v >> 48)
	data[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Models(data []byte, offset int, v uint32) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintModels(data []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		data[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	data[offset] = uint8(v)
	return offset + 1
}
func (m *TwilioParams) Size() (n int) {
	var l int
	_ = l
	l = len(m.CallSID)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.AccountSID)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.To)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.CallStatus != 0 {
		n += 1 + sovModels(uint64(m.CallStatus))
	}
	l = len(m.APIVersion)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.Direction != 0 {
		n += 1 + sovModels(uint64(m.Direction))
	}
	if m.CallDuration != 0 {
		n += 1 + sovModels(uint64(m.CallDuration))
	}
	l = len(m.RecordingURL)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.RecordingSID)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.RecordingDuration != 0 {
		n += 1 + sovModels(uint64(m.RecordingDuration))
	}
	l = len(m.Digits)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.MessageSID)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.SMSSID)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.NumMedia != 0 {
		n += 2 + sovModels(uint64(m.NumMedia))
	}
	if len(m.MediaItems) > 0 {
		for _, e := range m.MediaItems {
			l = e.Size()
			n += 2 + l + sovModels(uint64(l))
		}
	}
	l = len(m.MessagingServiceID)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.QueueSID)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	if m.QueueTime != 0 {
		n += 2 + sovModels(uint64(m.QueueTime))
	}
	l = len(m.DequeingCallSID)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.ParentCallSID)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	if m.DialCallStatus != 0 {
		n += 2 + sovModels(uint64(m.DialCallStatus))
	}
	if m.DialCallDuration != 0 {
		n += 2 + sovModels(uint64(m.DialCallDuration))
	}
	if m.DeprecatedRecordingMediaID != 0 {
		n += 2 + sovModels(uint64(m.DeprecatedRecordingMediaID))
	}
	if m.MessageStatus != 0 {
		n += 2 + sovModels(uint64(m.MessageStatus))
	}
	l = len(m.DialCallSID)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.RecordingMediaID)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	if m.TranscriptionStatus != 0 {
		n += 2 + sovModels(uint64(m.TranscriptionStatus))
	}
	l = len(m.TranscriptionURL)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.TranscriptionText)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.TranscriptionSID)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.ForwardedFrom)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.CallerName)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.FromCity)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.FromState)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.FromZip)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.FromCountry)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.ToCity)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.ToState)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.ToZip)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	l = len(m.ToCountry)
	if l > 0 {
		n += 2 + l + sovModels(uint64(l))
	}
	return n
}

func (m *TwilioParams_TwilioMediaItem) Size() (n int) {
	var l int
	_ = l
	l = len(m.ContentType)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.MediaURL)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.DeprecatedID != 0 {
		n += 1 + sovModels(uint64(m.DeprecatedID))
	}
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	return n
}

func (m *SendGridIncomingEmail) Size() (n int) {
	var l int
	_ = l
	l = len(m.Headers)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.HTML)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.CC)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Subject)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.DKIM)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.SPF)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.SMTPEnvelope)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Charsets)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.SpamScore)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.SpamReport)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.NumAttachments != 0 {
		n += 1 + sovModels(uint64(m.NumAttachments))
	}
	if len(m.Attachments) > 0 {
		for _, e := range m.Attachments {
			l = e.Size()
			n += 1 + l + sovModels(uint64(l))
		}
	}
	return n
}

func (m *SendGridIncomingEmail_Attachment) Size() (n int) {
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Filename)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.DeprecatedID != 0 {
		n += 1 + sovModels(uint64(m.DeprecatedID))
	}
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	return n
}

func (m *Incoming) Size() (n int) {
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovModels(uint64(m.Type))
	}
	if m.Message != nil {
		n += m.Message.Size()
	}
	if m.Timestamp != 0 {
		n += 1 + sovModels(uint64(m.Timestamp))
	}
	if m.ID != 0 {
		n += 1 + sovModels(uint64(m.ID))
	}
	return n
}

func (m *Incoming_Twilio) Size() (n int) {
	var l int
	_ = l
	if m.Twilio != nil {
		l = m.Twilio.Size()
		n += 1 + l + sovModels(uint64(l))
	}
	return n
}
func (m *Incoming_SendGrid) Size() (n int) {
	var l int
	_ = l
	if m.SendGrid != nil {
		l = m.SendGrid.Size()
		n += 1 + l + sovModels(uint64(l))
	}
	return n
}

func sovModels(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozModels(x uint64) (n int) {
	return sovModels(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *TwilioParams) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TwilioParams{`,
		`CallSID:` + fmt.Sprintf("%v", this.CallSID) + `,`,
		`AccountSID:` + fmt.Sprintf("%v", this.AccountSID) + `,`,
		`From:` + fmt.Sprintf("%v", this.From) + `,`,
		`To:` + fmt.Sprintf("%v", this.To) + `,`,
		`CallStatus:` + fmt.Sprintf("%v", this.CallStatus) + `,`,
		`APIVersion:` + fmt.Sprintf("%v", this.APIVersion) + `,`,
		`Direction:` + fmt.Sprintf("%v", this.Direction) + `,`,
		`CallDuration:` + fmt.Sprintf("%v", this.CallDuration) + `,`,
		`RecordingURL:` + fmt.Sprintf("%v", this.RecordingURL) + `,`,
		`RecordingSID:` + fmt.Sprintf("%v", this.RecordingSID) + `,`,
		`RecordingDuration:` + fmt.Sprintf("%v", this.RecordingDuration) + `,`,
		`Digits:` + fmt.Sprintf("%v", this.Digits) + `,`,
		`MessageSID:` + fmt.Sprintf("%v", this.MessageSID) + `,`,
		`SMSSID:` + fmt.Sprintf("%v", this.SMSSID) + `,`,
		`Body:` + fmt.Sprintf("%v", this.Body) + `,`,
		`NumMedia:` + fmt.Sprintf("%v", this.NumMedia) + `,`,
		`MediaItems:` + strings.Replace(fmt.Sprintf("%v", this.MediaItems), "TwilioParams_TwilioMediaItem", "TwilioParams_TwilioMediaItem", 1) + `,`,
		`MessagingServiceID:` + fmt.Sprintf("%v", this.MessagingServiceID) + `,`,
		`QueueSID:` + fmt.Sprintf("%v", this.QueueSID) + `,`,
		`QueueTime:` + fmt.Sprintf("%v", this.QueueTime) + `,`,
		`DequeingCallSID:` + fmt.Sprintf("%v", this.DequeingCallSID) + `,`,
		`ParentCallSID:` + fmt.Sprintf("%v", this.ParentCallSID) + `,`,
		`DialCallStatus:` + fmt.Sprintf("%v", this.DialCallStatus) + `,`,
		`DialCallDuration:` + fmt.Sprintf("%v", this.DialCallDuration) + `,`,
		`DeprecatedRecordingMediaID:` + fmt.Sprintf("%v", this.DeprecatedRecordingMediaID) + `,`,
		`MessageStatus:` + fmt.Sprintf("%v", this.MessageStatus) + `,`,
		`DialCallSID:` + fmt.Sprintf("%v", this.DialCallSID) + `,`,
		`RecordingMediaID:` + fmt.Sprintf("%v", this.RecordingMediaID) + `,`,
		`TranscriptionStatus:` + fmt.Sprintf("%v", this.TranscriptionStatus) + `,`,
		`TranscriptionURL:` + fmt.Sprintf("%v", this.TranscriptionURL) + `,`,
		`TranscriptionText:` + fmt.Sprintf("%v", this.TranscriptionText) + `,`,
		`TranscriptionSID:` + fmt.Sprintf("%v", this.TranscriptionSID) + `,`,
		`ForwardedFrom:` + fmt.Sprintf("%v", this.ForwardedFrom) + `,`,
		`CallerName:` + fmt.Sprintf("%v", this.CallerName) + `,`,
		`FromCity:` + fmt.Sprintf("%v", this.FromCity) + `,`,
		`FromState:` + fmt.Sprintf("%v", this.FromState) + `,`,
		`FromZip:` + fmt.Sprintf("%v", this.FromZip) + `,`,
		`FromCountry:` + fmt.Sprintf("%v", this.FromCountry) + `,`,
		`ToCity:` + fmt.Sprintf("%v", this.ToCity) + `,`,
		`ToState:` + fmt.Sprintf("%v", this.ToState) + `,`,
		`ToZip:` + fmt.Sprintf("%v", this.ToZip) + `,`,
		`ToCountry:` + fmt.Sprintf("%v", this.ToCountry) + `,`,
		`}`,
	}, "")
	return s
}
func (this *TwilioParams_TwilioMediaItem) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TwilioParams_TwilioMediaItem{`,
		`ContentType:` + fmt.Sprintf("%v", this.ContentType) + `,`,
		`MediaURL:` + fmt.Sprintf("%v", this.MediaURL) + `,`,
		`DeprecatedID:` + fmt.Sprintf("%v", this.DeprecatedID) + `,`,
		`ID:` + fmt.Sprintf("%v", this.ID) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SendGridIncomingEmail) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SendGridIncomingEmail{`,
		`Headers:` + fmt.Sprintf("%v", this.Headers) + `,`,
		`Text:` + fmt.Sprintf("%v", this.Text) + `,`,
		`HTML:` + fmt.Sprintf("%v", this.HTML) + `,`,
		`Sender:` + fmt.Sprintf("%v", this.Sender) + `,`,
		`Recipient:` + fmt.Sprintf("%v", this.Recipient) + `,`,
		`CC:` + fmt.Sprintf("%v", this.CC) + `,`,
		`Subject:` + fmt.Sprintf("%v", this.Subject) + `,`,
		`DKIM:` + fmt.Sprintf("%v", this.DKIM) + `,`,
		`SPF:` + fmt.Sprintf("%v", this.SPF) + `,`,
		`SMTPEnvelope:` + fmt.Sprintf("%v", this.SMTPEnvelope) + `,`,
		`Charsets:` + fmt.Sprintf("%v", this.Charsets) + `,`,
		`SpamScore:` + fmt.Sprintf("%v", this.SpamScore) + `,`,
		`SpamReport:` + fmt.Sprintf("%v", this.SpamReport) + `,`,
		`NumAttachments:` + fmt.Sprintf("%v", this.NumAttachments) + `,`,
		`Attachments:` + strings.Replace(fmt.Sprintf("%v", this.Attachments), "SendGridIncomingEmail_Attachment", "SendGridIncomingEmail_Attachment", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SendGridIncomingEmail_Attachment) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SendGridIncomingEmail_Attachment{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Filename:` + fmt.Sprintf("%v", this.Filename) + `,`,
		`DeprecatedID:` + fmt.Sprintf("%v", this.DeprecatedID) + `,`,
		`ID:` + fmt.Sprintf("%v", this.ID) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Incoming) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Incoming{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`Timestamp:` + fmt.Sprintf("%v", this.Timestamp) + `,`,
		`ID:` + fmt.Sprintf("%v", this.ID) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Incoming_Twilio) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Incoming_Twilio{`,
		`Twilio:` + strings.Replace(fmt.Sprintf("%v", this.Twilio), "TwilioParams", "TwilioParams", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Incoming_SendGrid) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Incoming_SendGrid{`,
		`SendGrid:` + strings.Replace(fmt.Sprintf("%v", this.SendGrid), "SendGridIncomingEmail", "SendGridIncomingEmail", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringModels(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *TwilioParams) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TwilioParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TwilioParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.To = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallStatus", wireType)
			}
			m.CallStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.CallStatus |= (TwilioParams_CallStatus(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIVersion = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Direction", wireType)
			}
			m.Direction = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.Direction |= (TwilioParams_Direction(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallDuration", wireType)
			}
			m.CallDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.CallDuration |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordingURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecordingURL = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordingSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecordingSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordingDuration", wireType)
			}
			m.RecordingDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.RecordingDuration |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Digits", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Digits = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SMSSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SMSSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumMedia", wireType)
			}
			m.NumMedia = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.NumMedia |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaItems = append(m.MediaItems, &TwilioParams_TwilioMediaItem{})
			if err := m.MediaItems[len(m.MediaItems)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessagingServiceID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessagingServiceID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueueSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QueueSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueueTime", wireType)
			}
			m.QueueTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.QueueTime |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DequeingCallSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DequeingCallSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentCallSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentCallSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DialCallStatus", wireType)
			}
			m.DialCallStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.DialCallStatus |= (TwilioParams_CallStatus(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DialCallDuration", wireType)
			}
			m.DialCallDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.DialCallDuration |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeprecatedRecordingMediaID", wireType)
			}
			m.DeprecatedRecordingMediaID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.DeprecatedRecordingMediaID |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageStatus", wireType)
			}
			m.MessageStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.MessageStatus |= (TwilioParams_MessageStatus(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DialCallSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DialCallSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordingMediaID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecordingMediaID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TranscriptionStatus", wireType)
			}
			m.TranscriptionStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.TranscriptionStatus |= (TwilioParams_TranscriptionStatus(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TranscriptionURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TranscriptionURL = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TranscriptionText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TranscriptionText = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TranscriptionSID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TranscriptionSID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardedFrom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardedFrom = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallerName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallerName = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromCity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromCity = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromState", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromState = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromZip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromZip = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromCountry", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromCountry = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToCity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToCity = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToState", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToState = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 108:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToZip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToZip = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 109:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToCountry", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToCountry = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TwilioParams_TwilioMediaItem) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TwilioMediaItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TwilioMediaItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContentType = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaURL = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeprecatedID", wireType)
			}
			m.DeprecatedID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.DeprecatedID |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendGridIncomingEmail) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendGridIncomingEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendGridIncomingEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Headers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Headers = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HTML", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HTML = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CC = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subject = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DKIM", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DKIM = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SPF", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SPF = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SMTPEnvelope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SMTPEnvelope = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Charsets", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Charsets = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpamScore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpamScore = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpamReport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpamReport = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumAttachments", wireType)
			}
			m.NumAttachments = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.NumAttachments |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachments = append(m.Attachments, &SendGridIncomingEmail_Attachment{})
			if err := m.Attachments[len(m.Attachments)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendGridIncomingEmail_Attachment) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Attachment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Attachment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filename", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filename = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeprecatedID", wireType)
			}
			m.DeprecatedID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.DeprecatedID |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Incoming) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Incoming: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Incoming: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.Type |= (Incoming_Type(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Twilio", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TwilioParams{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Message = &Incoming_Twilio{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendGrid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SendGridIncomingEmail{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Message = &Incoming_SendGrid{v}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.Timestamp |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.ID |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModels(data []byte) (n int, err error) {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModels
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if data[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthModels
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowModels
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := data[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipModels(data[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthModels = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModels   = fmt.Errorf("proto: integer overflow")
)
