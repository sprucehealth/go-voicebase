// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/sprucehealth/backend/libs/transcription (interfaces: Provider)

package transcriptionmock

import (
	gomock "github.com/golang/mock/gomock"
	transcription "github.com/sprucehealth/backend/libs/transcription"
)

// Mock of Provider interface
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockProviderRecorder
}

// Recorder for MockProvider (not exported)
type _MockProviderRecorder struct {
	mock *MockProvider
}

func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &_MockProviderRecorder{mock}
	return mock
}

func (_m *MockProvider) EXPECT() *_MockProviderRecorder {
	return _m.recorder
}

func (_m *MockProvider) LookupTranscriptionJob(_param0 string) (*transcription.Job, error) {
	ret := _m.ctrl.Call(_m, "LookupTranscriptionJob", _param0)
	ret0, _ := ret[0].(*transcription.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) LookupTranscriptionJob(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LookupTranscriptionJob", arg0)
}

func (_m *MockProvider) SubmitTranscriptionJob(_param0 string) (*transcription.Job, error) {
	ret := _m.ctrl.Call(_m, "SubmitTranscriptionJob", _param0)
	ret0, _ := ret[0].(*transcription.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProviderRecorder) SubmitTranscriptionJob(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SubmitTranscriptionJob", arg0)
}
