syntax = "proto3";

package routing;

// ChannelType specifies the channel over which the communication 
// is intended to take place.
enum ChannelType {
	Voice = 0;
	SMS = 1;
}

// Message represents a generic message that contains text and a list of attachments
// to be delivered over a certain external channel. It is not necessary for the destination
// to be specified in which case the routing service determines the best way to deliver the message.
message Message {

	// AttachmentData is a typed representation of attachment data.
	message Attachment {
		enum Type {
			Voicemail = 0;
		}
		Type type = 1;
		oneof attachments {
			VoicemailAttachment attachment_voicemail = 2;
		}
	}

	string text = 1;
	repeated Attachment attachments = 2;
	uint64 created = 3;

	// from_entity_id and to_entity_id represent the addressable id of the source retrieved
	// from the directory service.
	string from_entity_id = 4;
	string to_entity_id = 5;

	// from_channel_id and to_channel_id represent the id of the source 
	// and destination specific to the channel.
	ChannelType channel = 6;
	string from_channel_id = 7;
	string to_channel_id = 8;
}

// VoicemailAttachment represents a voicemail attachment.
message VoicemailAttachment {
 	uint32 duration_in_seconds = 1;
 	string url = 2;
}

// RPC

message RouteMessageRequest {
	Message message = 1;
}

message RouteMessageResponse {}

service Routing {	
	rpc RouteMessage(RouteMessageRequest) returns (RouteMessageResponse) {}
}