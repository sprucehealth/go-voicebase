syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = true;

package directory;

enum EntityType {
	ORGANIZATION = 0;
	INTERNAL = 1;
	EXTERNAL = 2;
}

enum EntityInformation {
	MEMBERSHIPS = 0;
	MEMBERS = 1;
	CONTACTS = 2;
	EXTERNAL_IDS = 3;
}

message ExternalID {
    string id = 1 [(gogoproto.customname) = "ID"];
    string entity_id = 2  [(gogoproto.customname) = "EntityID"];
}

message Entity {
	string id = 1 [(gogoproto.customname) = "ID"];
	string name = 2;

	EntityType type = 3;
	repeated Entity memberships = 4;
	repeated Entity members = 5;
	repeated string external_ids = 6 [(gogoproto.customname) = "ExternalIDs"];
	repeated Contact contacts = 7;
	repeated EntityInformation included_information = 8;
}

message RequestedInformation {
	int64 depth = 1;
	repeated EntityInformation entity_information = 2;
}

message ExternalIDsRequest {
    repeated string entity_ids = 1 [(gogoproto.customname) = "EntityIDs"];;
}

message ExternalIDsResponse {
    repeated ExternalID external_ids = 1 [(gogoproto.customname) = "ExternalIDs"];;
}

message LookupEntitiesRequest {
	enum LookupKeyType {
		ENTITY_ID = 0;
		EXTERNAL_ID = 1;
	}

	LookupKeyType lookup_key_type = 1;
	oneof lookup_key_oneof {
		string entity_id = 2 [(gogoproto.customname) = "EntityID"];
		string external_id = 3 [(gogoproto.customname) = "ExternalID"];
	}

	RequestedInformation requested_information = 4;
}

message LookupEntitiesResponse {
	repeated Entity entities = 1;
}

message CreateEntityRequest {
	string     name = 1;
	EntityType type = 2;
	string     external_id = 3 [(gogoproto.customname) = "ExternalID"];
	string     initial_membership_entity_id = 4 [(gogoproto.customname) = "InitialMembershipEntityID"];
	repeated   Contact contacts = 5;
	RequestedInformation requested_information = 6;
}

message CreateEntityResponse {
	Entity entity = 1;
}

message CreateMembershipRequest {
	string entity_id = 1 [(gogoproto.customname) = "EntityID"];
	string target_entity_id = 2 [(gogoproto.customname) = "TargetEntityID"];
	RequestedInformation requested_information = 3;
}

message CreateMembershipResponse {
	Entity entity = 1;
}

enum ContactType {
	PHONE = 0;
	EMAIL = 1;
}

message Contact {
	ContactType contact_type = 1;
	string value = 2;
	bool provisioned = 3;
}

message LookupEntitiesByContactRequest {
	string contact_value = 1;
	RequestedInformation requested_information = 4;
}

message LookupEntitiesByContactResponse {
	repeated Entity entities = 1;
}

message CreateContactRequest {
	Contact contact = 1;
	string entity_id = 2 [(gogoproto.customname) = "EntityID"];
	RequestedInformation requested_information = 3;
}

message CreateContactResponse {
	Entity entity = 1;
}

service Directory {
    rpc CreateContact (CreateContactRequest) returns (CreateContactResponse);
	rpc CreateEntity (CreateEntityRequest) returns (CreateEntityResponse);
	rpc CreateMembership (CreateMembershipRequest) returns (CreateMembershipResponse);
    rpc ExternalIDs (ExternalIDsRequest) returns (ExternalIDsResponse);
    rpc LookupEntities (LookupEntitiesRequest) returns (LookupEntitiesResponse);
	rpc LookupEntitiesByContact (LookupEntitiesByContactRequest) returns (LookupEntitiesByContactResponse);
}