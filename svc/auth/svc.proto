syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = true;

package auth;

// VerificationCodeType represents the various types/use cases of verification codes
enum VerificationCodeType {
	PHONE = 0;
	EMAIL = 1;
	ACCOUNT_2FA = 2;
    PASSWORD_RESET = 3;
}

// VerificationCode represents the collection of information used to represent the time bound verification code
message VerificationCode {
    string token = 1;
    string code = 2;
    VerificationCodeType type = 4;
    uint64 expiration_epoch = 5;
}

// Account represents the data associated with an account
message Account {
	string id = 1 [(gogoproto.customname) = "ID"];
	string first_name = 2;
	string last_name = 3;
}

// An AuthToken represents the token value and metadata about the token
message AuthToken {
	string value = 1;
	uint64 expiration_epoch = 2;
}

// AuthenticateLoginRequest represents the information that is used to authenticate a users login.
// The token_attributes map is used when generating the auth token for this login. Future use of this token
//  must provide the same information.
message AuthenticateLoginRequest {
	string email = 1;
	string password = 2;
	map<string, string> token_attributes = 3;
}

// AuthenticateLoginResponse represents the information that is returned from AuthenticateLoginRequest
// In the event that requires_two_factor_auth is set to true, the provided token will only work for a short time and to make the 2FA call
message AuthenticateLoginResponse {
	AuthToken token = 1;
	Account account = 2;
    bool two_factor_required = 4;
    string two_factor_phone_number = 5;
}

// AuthenticateLoginWithCodeRequest represents the information that is used to authenticate a use via token/code pair.
// The token_attributes map is used when generating the auth token for this login. Future use of this token
//  must provide the same information.
message AuthenticateLoginWithCodeRequest {
	string token = 1;
	string code = 2;
	map<string, string> token_attributes = 3;
}

// AuthenticateLoginWithCodeResponse represents the information that is returned from AuthenticateLoginWithCode
message AuthenticateLoginWithCodeResponse {
	AuthToken token = 1;
	Account account = 2;
}

// CheckAuthenticationRequest checks if the provided token maps to an account and is still valid
// The refresh parameter indicates if a new token should be created with an extended expiration
message CheckAuthenticationRequest {
	string token = 1;
	map<string, string> token_attributes = 2;
	bool refresh = 3;
}

// CheckAuthenticationResponse represents the information that is returned from IsAuthenticatedRequest
// If a refresh was requested then a new token will be returned
message CheckAuthenticationResponse {
	bool is_authenticated = 1;
	Account account = 2;
	AuthToken token = 3;
}

// CreateAccountRequest represents the information that is expected in account creation requests
// The email and optional? phone number are set as the primary for the account
message CreateAccountRequest {
	string first_name = 1;
	string last_name = 2;
	string email = 3;
	string phone_number = 4;
	string password = 5;
	map<string, string> token_attributes = 6;
}

// CreateAccountResponse represents the information that is returned from CreateAccountRequest
// The account id and innter auth information is returned from account creation
message CreateAccountResponse {
	AuthToken token = 1;
	Account account = 2;
}

// GetAccountRequest represents the information required to request a users account information
//  AccountEmail is an optional second field. If ID is not provided, then email will be used to lookup the account
message GetAccountRequest {
	string account_id = 1 [(gogoproto.customname) = "AccountID"];
    string account_email = 2;
}

// GetAccountResponse represents the information returned from a GetAccount request
message GetAccountResponse {
	Account account = 1;
}

// UnauthenticateRequest represents the information required to tombstone a token
message UnauthenticateRequest {
	string token = 1;
	map<string, string> token_attributes = 2;
}

// UnauthenticateResponse represents the information returned from an Unauthenticate request
message UnauthenticateResponse {}

// CreateVerificationCodeRequest represents the information required to create a verification code
message CreateVerificationCodeRequest {
    VerificationCodeType type = 1;
    string value_to_verify = 2;
}

// CreateVerificationCodeResponse represents the information returned from a CreateVerificationCode request
message CreateVerificationCodeResponse {
    VerificationCode verification_code = 1;
}

// CheckVerificationCodeRequest represents the information required to check a verification code
message CheckVerificationCodeRequest {
    string token = 1;
    string code = 2;
    map<string, string> token_attributes = 3;
}

// CreateVerificationCodeResponse represents the information returned from a CheckVerificationCode request
message CheckVerificationCodeResponse {
    Account   account = 1;
    string    value = 2;
}

// VerifiedValueRequest represents the information required to get the value associated with a verified code
message VerifiedValueRequest {
    string token = 1;
}

// VerifiedValueResponse represents the information returned from a VerifiedValue request
message VerifiedValueResponse {
    string value = 1;
}

// CreatePasswordResetTokenRequest represents the information required to generate a password reset token 
message CreatePasswordResetTokenRequest {
    string email = 1;
}

// CreatePasswordResetTokenResponse represents the information returned from a call to CreatePasswordResetToken
message CreatePasswordResetTokenResponse {
    string token = 1;
}

// CheckPasswordResetTokenRequest represents the information required to generate a password reset token 
message CheckPasswordResetTokenRequest {
    string token = 1;
}

// CheckPasswordResetTokenResponse represents the information returned from a call to CheckPasswordResetToken
message CheckPasswordResetTokenResponse {
    string account_id = 1 [(gogoproto.customname) = "AccountID"];
    string account_phone_number = 2;
    string account_email = 3;
}

// UpdatePasswordRequest represents the information required to reset a password
message UpdatePasswordRequest {
    string token = 1;
    string code = 2;
    string new_password = 3;
}

// UpdatePasswordResponse represents the information returned from UpdatePassword
message UpdatePasswordResponse {}

// Auth provides mechanisms for other services to perform authentication of external entities interacting with them
service Auth {
	rpc AuthenticateLogin (AuthenticateLoginRequest) returns (AuthenticateLoginResponse);
    rpc AuthenticateLoginWithCode (AuthenticateLoginWithCodeRequest) returns (AuthenticateLoginWithCodeResponse);
	rpc CheckAuthentication (CheckAuthenticationRequest) returns (CheckAuthenticationResponse);
    rpc CheckPasswordResetToken (CheckPasswordResetTokenRequest) returns (CheckPasswordResetTokenResponse);
    rpc CheckVerificationCode (CheckVerificationCodeRequest) returns (CheckVerificationCodeResponse);
	rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse);
    rpc CreatePasswordResetToken (CreatePasswordResetTokenRequest) returns (CreatePasswordResetTokenResponse);
    rpc CreateVerificationCode (CreateVerificationCodeRequest) returns (CreateVerificationCodeResponse);
	rpc GetAccount (GetAccountRequest) returns (GetAccountResponse);
	rpc Unauthenticate (UnauthenticateRequest) returns (UnauthenticateResponse);
    rpc UpdatePassword (UpdatePasswordRequest) returns (UpdatePasswordResponse);
    rpc VerifiedValue (VerifiedValueRequest) returns (VerifiedValueResponse);
}